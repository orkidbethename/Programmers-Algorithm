# 시간복잡도&디버깅

- 시간복잡도
    
    : 주어진 문제를 해셜하기 위한 연산 횟수
    
    → 일반적으로 수행시간은 1억 번의 연산을 1초의 시간으로 간주하여 예측
    
    ⇒ 주어진 시간 제한과 데이터 크기를 바탕으로 어떤 정렬 알고리즘을 사용해야 할 것인지 판단
    
    연산횟수 = 알고리즘 시간복잡도 * 데이터의 크기
    
    - 빅-오메가 : 최선일 때의 연산 횟수(best case)
    - 빅-세타 : 보통일 때의 연산 횟수(average case)
    - 빅-오 : 최악일 때의 연산 횟수(worst case)
    
- 시간 복잡도 도출 기준
    - 상수는 시간 복잡도에서 제외하낟
    - 가장 많이 중첩된 반복문을 기준으로 도출
    
- 디버깅 방법
    - 코드에서 디버깅 하고자 하는 줄에 중단점을 설정(중단점은 여러개 설정 가능)
    - IDE의 디버깅 기능을 실행하여 코드를 1줄 씩 실행 혹은 다음 중단점까지 실행
        
        → 이 과정에서 추적할 변숫값도 지정 가능(변숫값이 자신의 의도대로 바뀌는지 파악)
        
    - 변숫값 이외에도 원하는 수식을 입력해 논리 오류를 파악
